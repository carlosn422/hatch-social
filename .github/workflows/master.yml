name: Deploy Docker

on:
  push:
    branches:
      - master  # Cambia esto por el nombre de tu rama principal si es diferente

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to DigitalOcean Container Registry
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${DOCKER_PASSWORD}" | docker login registry.digitalocean.com -u "${DOCKER_USERNAME}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build . -t registry.digitalocean.com/containerhatch/app:hatch-social
          docker push registry.digitalocean.com/containerhatch/app:hatch-social

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Ensure SSH directory exists
        run: mkdir -p ~/.ssh
      
      - name: Ensure known_hosts file exists
        run: touch ~/.ssh/known_hosts

      - name: Install Docker and Docker Compose on Droplet
        run: |
          sshpass -p "${{ secrets.DROPLET_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            apt-get update
            apt-get install -y docker.io docker-compose
            mkdir -p /hatch-social
          EOF
        env:
          DROPLET_PASSWORD: ${{ secrets.DROPLET_PASSWORD }}

      - name: Copy Docker Compose file to Droplet
        run: |
            sshpass -p "${{ secrets.DROPLET_PASSWORD }}" scp docker-compose.yml root@${{ secrets.DROPLET_IP }}:/hatch-social/docker-compose.yml
        env:
            DROPLET_PASSWORD: ${{ secrets.DROPLET_PASSWORD }}
            DROPLET_IP: ${{ secrets.DROPLET_IP }}
  
      - name: Copy second file to Droplet
        run: |
            sshpass -p "${{ secrets.DROPLET_PASSWORD }}" scp default.conf root@${{ secrets.DROPLET_IP }}:/hatch-social/default.conf
        env:
            DROPLET_PASSWORD: ${{ secrets.DROPLET_PASSWORD }}
            DROPLET_IP: ${{ secrets.DROPLET_IP }}
    
      - name: SSH into Droplet and manage Docker containers
        run: |
          sshpass -p "${{ secrets.DROPLET_PASSWORD }}" ssh -T -o StrictHostKeyChecking=no -o ServerAliveInterval=60 root@${{ secrets.DROPLET_IP }} << 'EOF'
            set -e  
            cd /hatch-social
            
            # Verificar que el archivo docker-compose.yml está presente y no es un directorio
            if [ -f docker-compose.yml ]; then
              echo "docker-compose.yml is a file"
            else
              echo "docker-compose.yml is NOT a file or does not exist"
              exit 1
            fi
            
            # Detener y eliminar todos los contenedores si existen
            docker-compose down || true
            
            # Eliminar todas las imágenes si existen
            docker-compose rm -f || true
            
            # Reiniciar los servicios
            docker-compose up -d
            echo "Completed Docker operations"  
          EOF
        env:
          DROPLET_PASSWORD: ${{ secrets.DROPLET_PASSWORD }}
          DROPLET_IP: ${{ secrets.DROPLET_IP }}