name: Deploy Docker

on:
  push:
    branches:
      - master  # Cambia esto por el nombre de tu rama principal si es diferente

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to DigitalOcean Container Registry
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${DOCKER_PASSWORD}" | docker login registry.digitalocean.com -u "${DOCKER_USERNAME}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build . -t registry.digitalocean.com/containerhatch/app:hatch-social
          docker push registry.digitalocean.com/containerhatch/app:hatch-social

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Ensure SSH directory exists
        run: mkdir -p ~/.ssh
      
      - name: Ensure known_hosts file exists
        run: touch ~/.ssh/known_hosts

      - name: SSH into Droplet, stop and remove containers, images, and prepare directory
        run: |
          sshpass -p "${{ secrets.DROPLET_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'

              # Cambiar al directorio /hatch-social
              cd /hatch-social
        
              # Detener y eliminar todos los contenedores si existen
              docker-compose down || true
        
              # Eliminar todas las imÃ¡genes si existen
              docker-compose rm -f || true
        
              # Reiniciar los servicios
              docker-compose up -d
          EOF
        env:
          DROPLET_PASSWORD: ${{ secrets.DROPLET_PASSWORD }}